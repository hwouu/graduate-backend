generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  name          String
  studentId     String    @unique
  department    String
  admissionYear Int
  targetYear    Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  enrollments   Enrollment[]
}

model Course {
  id            String    @id @default(uuid())
  code          String    @unique
  name          String
  credits       Int
  courseType    CourseType
  prerequisiteId String?
  prerequisite   Course?  @relation("PrerequisiteCourse", fields: [prerequisiteId], references: [id])
  nextCourses    Course[] @relation("PrerequisiteCourse")
  semester      String?
  isRequired    Boolean   @default(false)
  enrollments   Enrollment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Enrollment {
  id        String    @id @default(uuid())
  userId    String
  courseId  String
  user      User      @relation(fields: [userId], references: [id])
  course    Course    @relation(fields: [courseId], references: [id])
  grade     String?
  semester  String
  status    EnrollmentStatus @default(PLANNED)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, courseId, semester])
}

enum CourseType {
  MAJOR_REQUIRED
  MAJOR_ELECTIVE
  MAJOR_INTENSIVE
  LIBERAL_REQUIRED
  LIBERAL_ELECTIVE
  GENERAL_ELECTIVE
}

enum EnrollmentStatus {
  PLANNED
  ENROLLED
  COMPLETED
  RETAKING
}